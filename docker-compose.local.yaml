services:
  postgres:
    container_name: agripro_db
    image: postgres:latest
    environment:
      POSTGRES_USER: agripro
      POSTGRES_PASSWORD: agripro
      PGDATA: /var/lib/postgresql/data
    volumes:
      - agripro_postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - agripro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U agripro"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - agripro_network

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"   # Single port for both host + containers
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Only one listener (always use localhost:29092)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - agripro_network
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:29092", "--list" ]
      interval: 10s
      timeout: 10s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"   # API for SDKs (Spring, MinioClient)
      - "9090:9090"   # Console UI in browser
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9090"
    networks:
      - agripro_network
    volumes:
      - minio_data:/data



networks:
  agripro_network:
    driver: bridge
    name: agripro_network

volumes:
  agripro_postgres:
    name: agripro_psql
  kafka-data:
    name: agripro_kafka_data
  minio_data:
    name: agripro_minio_data
