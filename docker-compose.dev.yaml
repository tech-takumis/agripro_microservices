services:

  postgres:
    container_name: agripro_db
    image: postgres:latest
    environment:
      POSTGRES_USER: agripro
      POSTGRES_PASSWORD: agripro
      PGDATA: /var/lib/postgresql/data
    volumes:
      - agripro_postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - agripro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U agripro"]
      interval: 10s
      timeout: 5s
      retries: 5

#  Kafka Service
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 200
    ports:
      - 22181:2181
    networks:
      - agripro_network
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo ruok | nc -w 2 localhost 2181 | grep imok" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 10s
      timeout: 10s
      retries: 10

    networks:
      - agripro_network

  config-server:
    image: config-server:latest
    container_name: config-server
    build:
      context: ./services/config-server
      dockerfile: Dockerfile
    networks:
      - agripro_network
    ports:
      - 8888:8888
    environment:
      SPRING_APPLICATION_NAME: config-server
    volumes:
      - ./config:/config
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 10s
      timeout: 5s

  discovery-server:
    image: discovery-server:latest
    container_name: discovery-server
    build:
      context: ./services/discovery-server
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      - agripro_network
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_APPLICATION_NAME=discovery-server
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s

  user-service:
    image: user-service:latest
    container_name: user-service
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - agripro_network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: user-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agripro_users
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8010/actuator/health" ]
      interval: 10s
      timeout: 5s

  application-service:
    image: application-service:latest
    container_name: application-service
    build:
      context: ./services/application-service
      dockerfile: Dockerfile
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - agripro_network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: application-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agripro_application
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8020/actuator/health" ]
      interval: 10s
      timeout: 5s

  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    build:
      context: ./services/gateway-service
      dockerfile: Dockerfile
    networks:
      - agripro_network
    depends_on:
       discovery-server:
         condition: service_healthy
       config-server:
        condition: service_healthy
       application-service:
        condition: service_started
       user-service:
        condition: service_started
    ports:
      - 9000:9000
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: gateway-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/actuator/health" ]
      interval: 10s
      timeout: 5s

networks:
  agripro_network:
    driver: bridge
    name: agripro_network

volumes:
  agripro_postgres: