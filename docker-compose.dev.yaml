version: '3.8'

services:
  # üêò Postgres
  postgres:
    container_name: agripro_db
    image: postgres:latest
    environment:
      POSTGRES_USER: agripro
      POSTGRES_PASSWORD: agripro
      PGDATA: /var/lib/postgresql/data
    volumes:
      - agripro_postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - agripro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U agripro"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üêù Zookeeper (reused from local)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - agripro_network
    restart: unless-stopped

  # ü¶ú Kafka (same configuration as local)
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"  # use one advertised port for host apps
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - agripro_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:29092", "--list" ]
      interval: 10s
      timeout: 10s
      retries: 10

  # ‚öô Config Server
  config-server:
    build:
      context: ./services/config-server
      dockerfile: Dockerfile
    image: config-server:latest
    container_name: config-server
    ports:
      - 8888:8888
    networks:
      - agripro_network
    environment:
      SPRING_APPLICATION_NAME: config-server
    volumes:
      - ./config:/config
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # üîé Discovery Server
  discovery-server:
    build:
      context: ./services/discovery-server
      dockerfile: Dockerfile
    image: discovery-server:latest
    container_name: discovery-server
    ports:
      - 8761:8761
    networks:
      - agripro_network
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: discovery-server
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # üë§ User Service
  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    image: user-service:latest
    container_name: user-service
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - agripro_network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: user-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agripro_users
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8010/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # üåê Gateway Service
  gateway-service:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    image: gateway-service:latest
    container_name: gateway-service
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      user-service:
        condition: service_started
    ports:
      - 9000:9000
    networks:
      - agripro_network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_NAME: gateway-service
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  agripro_network:
    driver: bridge
    name: agripro_network

volumes:
  agripro_postgres:
